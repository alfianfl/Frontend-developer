"use strict";const weatherApp={selectedLocations:{},addDialogContainer:document.getElementById("addDialogContainer")};function toggleAddDialog(){weatherApp.addDialogContainer.classList.toggle("visible")}function addLocation(){toggleAddDialog();const e=document.getElementById("selectCityToAdd"),t=e.options[e.selectedIndex],o=t.value,n={label:t.textContent,geo:o},r=getForecastCard(n);getForecastFromNetwork(o).then(e=>{renderForecast(r,e)}),weatherApp.selectedLocations[o]=n,saveLocationList(weatherApp.selectedLocations)}function removeLocation(e){const t=e.srcElement.parentElement;t.remove(),weatherApp.selectedLocations[t.id]&&(delete weatherApp.selectedLocations[t.id],saveLocationList(weatherApp.selectedLocations))}function renderForecast(e,t){if(!t)return;const o=e.querySelector(".card-last-updated"),n=o.textContent,r=parseInt(n);if(r>=t.currently.time)return;if(r>=t.currently.time)return;o.textContent=t.currently.time,e.querySelector(".description").textContent=t.currently.summary;const c=luxon.DateTime.fromSeconds(t.currently.time).setZone(t.timezone).toFormat("DDDD t");e.querySelector(".date").textContent=c,e.querySelector(".current .icon").className=`icon ${t.currently.icon}`,e.querySelector(".current .temperature .value").textContent=Math.round(t.currently.temperature),e.querySelector(".current .humidity .value").textContent=Math.round(100*t.currently.humidity),e.querySelector(".current .wind .value").textContent=Math.round(t.currently.windSpeed),e.querySelector(".current .wind .direction").textContent=Math.round(t.currently.windBearing);const a=luxon.DateTime.fromSeconds(t.daily.data[0].sunriseTime).setZone(t.timezone).toFormat("t");e.querySelector(".current .sunrise .value").textContent=a;const i=luxon.DateTime.fromSeconds(t.daily.data[0].sunsetTime).setZone(t.timezone).toFormat("t");e.querySelector(".current .sunset .value").textContent=i,e.querySelectorAll(".future .oneday").forEach((e,o)=>{const n=t.daily.data[o+1],r=luxon.DateTime.fromSeconds(n.time).setZone(t.timezone).toFormat("ccc");e.querySelector(".date").textContent=r,e.querySelector(".icon").className=`icon ${n.icon}`,e.querySelector(".temp-high .value").textContent=Math.round(n.temperatureHigh),e.querySelector(".temp-low .value").textContent=Math.round(n.temperatureLow)});const l=e.querySelector(".card-spinner");l&&e.removeChild(l)}function getForecastFromNetwork(e){return fetch(`/forecast/${e}`).then(e=>e.json()).catch(()=>null)}function getForecastFromCache(e){if(!("caches"in window))return null;const t=`${window.location.origin}/forecast/${e}`;return caches.match(t).then(e=>e?e.json():null).catch(e=>(console.error("Error getting data from cache",e),null))}function getForecastCard(e){const t=e.geo,o=document.getElementById(t);if(o)return o;const n=document.getElementById("weather-template").cloneNode(!0);return n.querySelector(".location").textContent=e.label,n.setAttribute("id",t),n.querySelector(".remove-city").addEventListener("click",removeLocation),document.querySelector("main").appendChild(n),n.removeAttribute("hidden"),n}function updateData(){Object.keys(weatherApp.selectedLocations).forEach(e=>{const t=weatherApp.selectedLocations[e],o=getForecastCard(t);getForecastFromCache(t.geo).then(e=>{renderForecast(o,e)}),getForecastFromNetwork(t.geo).then(e=>{renderForecast(o,e)})})}function saveLocationList(e){const t=JSON.stringify(e);localStorage.setItem("locationList",t)}function loadLocationList(){let e=localStorage.getItem("locationList");if(e)try{e=JSON.parse(e)}catch(t){e={}}if(!e||0===Object.keys(e).length){(e={})["40.7720232,-73.9732319"]={label:"New York City",geo:"40.7720232,-73.9732319"}}return e}function init(){weatherApp.selectedLocations=loadLocationList(),updateData(),document.getElementById("butRefresh").addEventListener("click",updateData),document.getElementById("butAdd").addEventListener("click",toggleAddDialog),document.getElementById("butDialogCancel").addEventListener("click",toggleAddDialog),document.getElementById("butDialogAdd").addEventListener("click",addLocation)}init();